#!/usr/bin/php
<?php
require_once './vendor/autoload.php';
require_once './vendor/autoload.php';

# initialize the twig templating engine
$loader = new Twig_Loader_Filesystem('./templates');
$twig = new Twig_Environment($loader, array(
    'cache' => './tmp',
));
$template = $twig->load('settings.tpl');

// read configuration
$yaml = \Symfony\Component\Yaml\Yaml::parseFile('config.yaml');
foreach ($yaml as $k => $v) {
    $$k = $v;
}

# read SP key and cert from the files generated by openssl
$sp_key_raw = file_get_contents($sp_key_file);
$sp_cert_raw = file_get_contents($sp_cert_file);

# get rid of '-----' lines
function clean_openssl($k)
{
    $ck = '';
    foreach (preg_split("/((\r?\n)|(\r\n?))/", $k) as $l) {
        if (strpos($l, '-----') === false) {
            $ck .= $l;
        }
    }
    return $ck;
}

$sp_key = clean_openssl($sp_key_raw);
$sp_cert = clean_openssl($sp_cert_raw);

# retrieve the IDP metadata and extract information
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, $idp_metadata_url);
curl_setopt($ch, CURLOPT_FAILONERROR, 1);
curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
curl_setopt($ch, CURLOPT_TIMEOUT, 15);
curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
$data = curl_exec($ch);
curl_close($ch);
$xml = new SimpleXMLElement($data);
$idp_entityid = $xml->xpath('//ns0:EntityDescriptor/@entityID')[0];
$idp_sso = $xml->xpath('//ns0:SingleSignOnService/@Location')[0];
$idp_slo = $xml->xpath('//ns0:SingleLogoutService/@Location')[0];
$idp_cert = $xml->xpath('//ns1:X509Certificate')[0];

echo $template->render(array(
  'sp_base' => $sp_base,
  'sp_cert' => $sp_cert,
  'sp_key' => $sp_key,
  'idp_entityid' => $idp_entityid,
  'idp_sso' => $idp_sso,
  'idp_slo' => $idp_slo,
  'idp_cert' => $idp_cert,
));
